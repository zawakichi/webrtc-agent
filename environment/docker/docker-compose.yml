version: '3.8'

services:
  webrtc-agent:
    build:
      context: ../../
      dockerfile: environment/docker/Dockerfile
    container_name: webrtc-agent-dev
    ports:
      - "3000:3000"
      - "9229:9229"  # Debug port
    volumes:
      - ../../src:/app/src:delegated
      - ../../doc:/app/doc:delegated
      - ../../tests:/app/tests:delegated
      - ../../package.json:/app/package.json
      - ../../package-lock.json:/app/package-lock.json
      - node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - DEBUG=webrtc-agent:*
      - LOG_LEVEL=debug
    env_file:
      - ../../.env
    command: npm run dev
    restart: unless-stopped
    networks:
      - webrtc-network

  # Redis for session management (future use)
  redis:
    image: redis:7-alpine
    container_name: webrtc-agent-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - webrtc-network

  # PostgreSQL for data persistence (future use)
  postgres:
    image: postgres:15-alpine
    container_name: webrtc-agent-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=webrtc_agent
      - POSTGRES_USER=developer
      - POSTGRES_PASSWORD=dev_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../../scripts/db:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - webrtc-network

volumes:
  node_modules:
  redis_data:
  postgres_data:

networks:
  webrtc-network:
    driver: bridge